{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link href="http://fonts.cdnfonts.com/css/opendyslexic" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<!--    <script src="main.js"></script>-->
    <style>
        body{
            font-family: 'OpenDyslexic', sans-serif;
            font-weight: bold;
            color: #fdbb62;
            background-color: #211301;
        }
        form {
            position: sticky;
            top: 0;
            background-color: #211301;
            z-index: 98;
        }
        table {
            width: 100%;
        }
        thead {
            font-weight: bolder;
            text-decoration: underline;
            font-size: 110%;
            z-index: 98;
        }
        .percent-change {
            color: white;
            background-color: darkgreen;
        }
        .percent-negative {
            color: white;
            background-color: darkred!important;
        }

        th {
            position: sticky;
            top: 40px;
            background-color: #211301;
            padding-top: 10px;
            padding-bottom: 10px;
            z-index: 98;
        }
        .cmc-viewer {
            position: sticky;
            top: 25vh;
            height: 75vh;
            width: 400px;
            left: 100vw;
            background-color: #211301;
            padding-top: 10px;
            padding-bottom: 10px;
        }
        input {

            color: #ffffff;
            background-color: #5e3908;
        }

        a {
            color:limegreen;
        }
        td {
            margin-top: -15px;
        }
        tr {
            width: 100%;
        }
        tr:hover {
            color: #ffffff;
            background-color: #5e3908;
        }
        .number_field{
            width: 75px;
        }
        .confirm {
            font-size: small;
        }
        .wallet-button {
            display: block;
        }
        .interesting-checkbox {
            background: darkgreen;
        }
        .review-checkbox {
            background: #2f8cab;
        }
        .reject-checkbox {
            background: darkred;
        }
        .interesting-checkbox, .review-checkbox, .reject-checkbox{
            display:inline-block;
            padding:2px 5px;
            border-radius:2px;
            position:relative;
            cursor:pointer;
        }

        .interesting-checkbox-element, .review-checkbox-element, .reject-checkbox-element{
            display:block;
            position:absolute;
            left:0;
            top:0;
            width:100%;
            height:100%;
            z-index:1;
            opacity:0;
        }

        .loading-interesting-checkbox-element, .loading-review-checkbox-element, .loading-reject-checkbox-element{
            display:none;
            position:absolute;
            left:0;
            top:5px;
            width:100%;
            height:100%;
            z-index:2;
            opacity:1;
        }

        .d-block-important {
            display: block !important;
        }

        .interesting-checkbox>input[type='checkbox']+i, .review-checkbox>input[type='checkbox']+i, .reject-checkbox>input[type='checkbox']+i{
            color:rgba(255,255,255,0.4);
        }

        .interesting-checkbox>input[type='checkbox']:checked+i, .review-checkbox>input[type='checkbox']:checked+i, .reject-checkbox>input[type='checkbox']:checked+i{
            color:#fff;
        }
    </style>
{% endblock %}
{% block body %}


    <form action="/index">
        <label for="from">From # </label>
        <input class="number_field" type="number" id="from" name="from" value="{{ from }}" min="0" max="10000000" step="1">
        <label for="to">To # </label>
        <input class="number_field" type="number" id="to" name="to" value="{{ to }}" min="1" max="10000000" step="1">
        <label for="price-threshold">Price < </label>
        <input class="number_field" type="number" id="price-threshold" name="price-threshold" value="{{ threshold }}" min="0.0000000001" max="1000000000" step="0.0000000001">
        <input type="submit" value="Go" name="submit">
        <input type="submit" value="^ Vol" name="incr-vol">
        <input type="submit" value="v Vol" name="decr-vol">
        <input type="submit" value="^ price" name="incr-price">
        <input type="submit" value="v price" name="decr-price">
        <input type="submit" value="1. GET LIST /!\ (40cr)" name="refresh_all">
        <input type="submit" value="2. GET CONTRACTS /!\ (80cr)" name="refresh_map">
        <input type="submit" value="3(repeat).GET last 200 (3cr)" name="refresh">
        <!-- Rounded switch -->
        <br>
        <div style="width: 100%;">
            <div style="margin-left: auto; margin-right: 0;">
                <label class="confirm">
                    <input type="checkbox" name="confirm" id="confirm">
                    Consume coin market cap Api credits
                </label>
            </div>



            <label style="right:0; text-align: right;" class="wallet-button">
                <a href="/bscbalances" type="button" id="wallet-button">
                    View wallet
                </a>
            </label>
        </div>

    </form>
<!--    <div class="cmc-viewer" >-->
<!--        <iframe class="cmc-viewer" src="https://pancakeswap.finance/swap?inputCurrency=0x55d398326f99059ff775485246999027b3197955&outputCurrency=0x749f031FDa3a4904b026f2275A697096492a129d&exactField=input&exactAmount=1.00" title="description"></iframe>-->
<!--    </div>-->
    <table>
        <thead>
            <tr >

                <th>#</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th>Name</th>
                <th>Symbol</th>
                <th>Price</th>
                <th>Volume 24h</th>
                <th>Date Added</th>
            </tr>
        </thead>

        {% set i=0 %}
        {% for coinDatum in coinData.CoinData %}


            <tr>
                <td style="text-align: center">{{ i }}

                </td>
                <td style="text-align: center; margin: 0; padding: 0; width: 28px; height: 24px">
                    <span class="review-checkbox">
                        <input class="review-checkbox-element" type="checkbox" onclick="
                            event.stopPropagation()
                            event.path[1].querySelector('.loading-review-checkbox-element').classList.add('d-block-important')
                            const xhttp = new XMLHttpRequest();
                            xhttp.onload = function() {
                                event.path[0].checked = !event.path[0].checked;

                                if (this.status === 200) {
                                try {
                                    response = JSON.parse(this.responseText)
                                    if ((response.coinDatum.isReviewed !== event.path[0].checked.toString()) && (response.status === 200))
                                    {
                                        event.path[0].checked = !event.path[0].checked;
                                        console.log(response)

                                    }
                                } catch (e) {
                                    console.log(this.responseText)
                                    console.log(e.message)
                                }
                                    console.log('wtf')
                                }
                                event.path[1].querySelector('.loading-review-checkbox-element').classList.remove('d-block-important')

                            }
                            xhttp.open('GET', 'update/coin?id={{ coinDatum.Id }}&isReviewed=' + (event.path[0].checked).toString());
                            xhttp.send();
                        "
                       {% if coinDatum.IsReviewed %}
                           checked
                       {% endif %}
                        />
                        <i class="fas fa-check" style="height: 5px"></i>
                        <img class="loading-review-checkbox-element" src="/public/loading.gif"/>
                    </span>
                </td>
                <td style="text-align: center; margin: 0; padding: 0; width: 28px; height: 24px">
                    <span class="interesting-checkbox">
                        <input class="interesting-checkbox-element" type="checkbox" onclick="
                            event.stopPropagation()
                            event.path[1].querySelector('.loading-interesting-checkbox-element').classList.add('d-block-important')
                            const xhttp = new XMLHttpRequest();
                            xhttp.onload = function() {
                                event.path[0].checked = !event.path[0].checked;
                                if (this.status === 200) {
                                try {
                                    response = JSON.parse(this.responseText)
                                    if ((response.coinDatum.isInteresting !== event.path[0].checked.toString()) && (response.status === 200))
                                    {
                                        event.path[0].checked = !event.path[0].checked;
                                        console.log(response)

                                    }
                                } catch (e) {
                                    console.log(this.responseText)
                                    console.log(e.message)
                                }
                                    console.log('wtf')
                                }
                                event.path[1].querySelector('.loading-interesting-checkbox-element').classList.remove('d-block-important')
                            }
                            xhttp.open('GET', 'update/coin?id={{ coinDatum.Id }}&isInteresting=' + (event.path[0].checked).toString());
                            xhttp.send();
                        "
                               {% if coinDatum.IsInteresting %}
                               checked
                               {% endif %}
                        />
                        <i class="fas fa-eye" style="height: 5px"></i>
                        <img class="loading-interesting-checkbox-element" src="/public/loading.gif"/>
                    </span>
                </td>
                <td style="text-align: center; margin: 0; padding: 0; width: 28px; height: 24px">
                    <span class="reject-checkbox">
                        <input class="reject-checkbox-element" type="checkbox" onclick="
                            event.stopPropagation()
                            event.path[1].querySelector('.loading-reject-checkbox-element').classList.add('d-block-important')
                            const xhttp = new XMLHttpRequest();
                            xhttp.onload = function() {
                                event.path[0].checked = !event.path[0].checked;
                                if (this.status === 200) {
                                try {
                                    response = JSON.parse(this.responseText)
                                    if ((response.coinDatum.isRejected !== event.path[0].checked.toString()) && (response.status === 200))
                                    {
                                        event.path[0].checked = !event.path[0].checked;
                                        console.log(response)

                                    }
                                } catch (e) {
                                    console.log(this.responseText)
                                    console.log(e.message)
                                }
                                    console.log('wtf')
                                }
                                event.path[1].querySelector('.loading-reject-checkbox-element').classList.remove('d-block-important')
                            }
                            xhttp.open('GET', 'update/coin?id={{ coinDatum.Id }}&isRejected=' + (event.path[0].checked).toString());
                            xhttp.send();
                        "
                               {% if coinDatum.IsRejected %}
                               checked
                               {% endif %}
                        />
                        <i class="fas fa-ban" style="height: 5px"></i>
                        <img class="loading-reject-checkbox-element" src="/public/loading.gif"/>
                    </span>
                </td>
                <td >
                    <a href="/links?id={{ coinDatum.Id }}" onclick="
                        window.open('/links?id={{ coinDatum.Id }}','linksWindow','width=400,height=300,top=980,left=0',
                                   `toolbar=no,
                                    location=no,
                                    status=no,
                                    menubar=no,
                                    scrollbars=yes,
                                    resizable=yes`); return false;"
                    >
                    <img src="{{ coinDatum.Logo }}"
                          width=25" height="25">
                    </a>
                </td>
                <td>{{ coinDatum.Name }}</td>


                <td>{{ coinDatum.Symbol }}</td>
                <td class="number-right"><span class = "percent-change
                    {% if coinDatum.Properties.Dollar.PercentChange24 < 0 %}
                        percent-negative
                    {% endif %}
                    "
                >{{ coinDatum.Properties.Dollar.PercentChange24|percent }}</span>
                    <div class="tooltip">
                        {{ coinDatum.Properties.Dollar.Price|number_format }}
                        <span class="tooltiptext">Last change from {{ coinDatum.Properties.Dollar.LastBlock.Network }} on {{ coinDatum.Properties.Dollar.LastBlock.TimeStamp.ISO8601|date }} at block {{ coinDatum.Properties.Dollar.LastBlock.Height }}</span>
                    </div>
                </td>
                <td class="number-right">{{ coinDatum.Properties.Dollar.Volume24|number_format_vol }}</td>
                <td style="text-align: end;">{{ coinDatum.DateAdded|date }}</td>
                {% if coinDatum.BscScan != "<nil>" %}
                    <td><a href="{{ coinDatum.BscScan }}"><img src="https://bscscan.com//images/favicon.ico" width=25" height="25"/></a></td>
<!--                    "href="https://pancakeswap.finance/swap?inputCurrency=0x55d398326f99059ff775485246999027b3197955&outputCurrency={{ coinDatum.BscContract }}&exactField=input&exactAmount=1.00"-->
                    <td><a onclick="
                        window.open('https://pancakeswap.finance/swap?inputCurrency=0x55d398326f99059ff775485246999027b3197955&outputCurrency={{ coinDatum.BscContract }}&exactField=input&exactAmount=1.00','popup','width=400,height=720,top=0,left=0','targetWindow',
                                   `toolbar=no,
                                    location=no,
                                    status=no,
                                    menubar=no,
                                    scrollbars=yes,
                                    resizable=yes,
                                    width=400,
                                    height=720`); return false;"
                            href="https://pancakeswap.finance/swap?inputCurrency=0x55d398326f99059ff775485246999027b3197955&outputCurrency={{ coinDatum.BscContract }}&exactField=input&exactAmount=1.00"
                        >
                        <img src="https://pancakeswap.finance/favicon.ico" width=25" height="25"/>
                    </a></td>
                {% else %}
                    <td></td>
                    <td></td>
                {% endif %}
                {% if coinDatum.EthScan != "<nil>" %}
                    <td><a href="{{ coinDatum.EthScan }}"><img style="background-color: white" src="https://etherscan.io/images/favicon2.ico" width=25" height="25"/></a></td>
                {% else %}
                    <td></td>
                {% endif %}
                {% if coinDatum.XrpScan != "<nil>" %}
                    <td><a href="{{ coinDatum.XrpScan }}">XRP</a></td>
                {% else %}
                    <td></td>
                {% endif %}

                <td style="text-align: end; right: 0">
                    <a  onclick="
                        e.stopPropagation();
                        w = window.open('https://coinmarketcap.com/currencies/{{ coinDatum.Slug }}','cmcWindow',`width=1520,height=1080,left=400,top=0,
                                    toolbar=no,
                                    location=no,
                                    status=no,
                                    menubar=no,
                                    scrollbars=yes,
                                    resizable=yes`);
                         // w[w.addEventListener ? 'addEventListener' : 'attachEvent'](
                         //    (w.attachEvent ? 'on' : '') + 'load', function (e) {
                         //            console.log('hello');
                         //            w.scroll(0, 1500);
                         //        }, false);

                            setTimeout(() => {
                                console.log('hello');
                                w.scroll(0, 1500);
                                }, 3500);
                            return false;"
                            href="https://coinmarketcap.com/currencies/{{ coinDatum.Slug }}"
                    >
                    <img style="background-color: white" src="https://coinmarketcap.com//favicon.ico" width=25" height="25"/>
                </a></td>



            </tr>
            {% set i=i+1 %}

        {% endfor %}
    </table>

{% endblock %}